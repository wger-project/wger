#  https://docs.docker.com/build/ci/github-actions/multi-platform/
name: Build and push production Docker images

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  REGISTRY_IMAGE: ${{ vars.REGISTRY_REPO }}/server
  REGISTRY_IMAGE_ALT: ${{ vars.REGISTRY_REPO }}/devel

jobs:
  build-prod:
    name: Build production image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v7
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Think if we want to also build branches, PRs, tags, etc.
          # https://github.com/docker/metadata-action
          tags: |
            type=raw,value=latest
            type=raw,value=2.3-dev
          images: |
            ${{ env.REGISTRY_IMAGE }}
            ${{ env.REGISTRY_IMAGE_ALT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: multi-buildx-${{ matrix.platform }}-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            multi-buildx-${{ matrix.platform }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: extras/docker/development/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

          # https://github.com/moby/buildkit#--export-cache-options
          # https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  merge:
    runs-on: ubuntu-latest
    needs:
      - build-prod
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value=latest
            type=raw,value=2.3-dev
          images: |
            ${{ env.REGISTRY_IMAGE }}
            ${{ env.REGISTRY_IMAGE_ALT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
